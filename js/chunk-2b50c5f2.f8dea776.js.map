{"version":3,"sources":["webpack:///../../../src/components/VTooltip/VTooltip.ts","webpack:///../../../src/components/VAppBar/VAppBar.ts","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts","webpack:///../../../src/mixins/menuable/index.ts"],"names":["name","props","closeDelay","type","Number","default","disabled","fixed","openDelay","openOnHover","tag","transition","String","data","calculatedMinWidth","closeDependents","computed","calculatedLeft","this","content","unknown","activatorLeft","attach","activator","left","top","right","parseInt","calcXOverflow","dimensions","calculatedTop","activatorTop","bottom","calcYOverflow","classes","computedTransition","isActive","offsetY","offsetX","styles","maxWidth","minWidth","opacity","zIndex","activeZIndex","beforeMount","mounted","methods","activate","requestAnimationFrame","deactivate","genActivatorListeners","listeners","e","genActivatorAttributes","genTransition","$createElement","genContent","setBackgroundColor","staticClass","class","activatorFixed","style","attrs","directives","value","isContentActive","ref","render","h","showLazyContent","baseMixins","Scroll","clippedLeft","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","applicationProperty","canScroll","collapse","app","currentScroll","computedContentHeight","height","min","dense","max","difference","iteration","offset","Math","computedFontSize","increment","computedLeft","$vuetify","application","computedMarginTop","computedOpacity","computedScrollThreshold","parseFloat","computedOriginalHeight","computedRight","computedTransform","hideShadow","isCollapsed","isProminent","fontSize","marginTop","transform","watch","val","created","genBackground","_b","updateApplication","computedHeight","thresholdMet","isScrollingUp","currentThreshold","arg","onScroll","functional","id","children","Object","key","fluid","mergeData","Array","allowOverflow","light","dark","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","openOnClick","positionX","positionY","absoluteX","absoluteY","activatedBy","width","offsetTop","scrollHeight","offsetLeft","hasJustFocused","hasWindow","inputActivator","pageWidth","pageYOffset","stackClass","stackMinZIndex","a","c","isNaN","computedTop","hasActivator","$slots","$scopedSlots","window","absolutePosition","calcLeft","calcTop","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","onClick","getInnerHeight","document","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","sneakPeek","cb","startTransition","Promise","resolve","updateDimensions"],"mappings":"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","file":"js/chunk-2b50c5f2.f8dea776.js","sourcesContent":["import './VTooltip.sass'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Colorable from '../../mixins/colorable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Helpers\nimport { convertToUnit, keyCodes, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Colorable, Delayable, Dependent, Detachable, Menuable, Toggleable).extend({\n  name: 'v-tooltip',\n\n  props: {\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    disabled: Boolean,\n    fixed: {\n      type: Boolean,\n      default: true,\n    },\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true,\n    },\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    transition: String,\n  },\n\n  data: () => ({\n    calculatedMinWidth: 0,\n    closeDependents: false,\n  }),\n\n  computed: {\n    calculatedLeft (): string {\n      const { activator, content } = this.dimensions\n      const unknown = !this.bottom && !this.left && !this.top && !this.right\n      const activatorLeft = this.attach !== false ? activator.offsetLeft : activator.left\n      let left = 0\n\n      if (this.top || this.bottom || unknown) {\n        left = (\n          activatorLeft +\n          (activator.width / 2) -\n          (content.width / 2)\n        )\n      } else if (this.left || this.right) {\n        left = (\n          activatorLeft +\n          (this.right ? activator.width : -content.width) +\n          (this.right ? 10 : -10)\n        )\n      }\n\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return `${this.calcXOverflow(left, this.dimensions.content.width)}px`\n    },\n    calculatedTop (): string {\n      const { activator, content } = this.dimensions\n      const activatorTop = this.attach !== false ? activator.offsetTop : activator.top\n      let top = 0\n\n      if (this.top || this.bottom) {\n        top = (\n          activatorTop +\n          (this.bottom ? activator.height : -content.height) +\n          (this.bottom ? 10 : -10)\n        )\n      } else if (this.left || this.right) {\n        top = (\n          activatorTop +\n          (activator.height / 2) -\n          (content.height / 2)\n        )\n      }\n\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return `${this.calcYOverflow(top + this.pageYOffset)}px`\n    },\n    classes (): object {\n      return {\n        'v-tooltip--top': this.top,\n        'v-tooltip--right': this.right,\n        'v-tooltip--bottom': this.bottom,\n        'v-tooltip--left': this.left,\n        'v-tooltip--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      }\n    },\n    computedTransition (): string {\n      if (this.transition) return this.transition\n\n      return this.isActive ? 'scale-transition' : 'fade-transition'\n    },\n    offsetY (): boolean {\n      return this.top || this.bottom\n    },\n    offsetX (): boolean {\n      return this.left || this.right\n    },\n    styles (): object {\n      return {\n        left: this.calculatedLeft,\n        maxWidth: convertToUnit(this.maxWidth),\n        minWidth: convertToUnit(this.minWidth),\n        opacity: this.isActive ? 0.9 : 0,\n        top: this.calculatedTop,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.value && this.callActivate()\n    })\n  },\n\n  mounted () {\n    if (getSlotType(this, 'activator', true) === 'v-slot') {\n      consoleError(`v-tooltip's activator slot must be bound, try '<template #activator=\"data\"><v-btn v-on=\"data.on>'`, this)\n    }\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(this.startTransition)\n    },\n    deactivate () {\n      this.runDelay('close')\n    },\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      listeners.focus = (e: Event) => {\n        this.getActivator(e)\n        this.runDelay('open')\n      }\n      listeners.blur = (e: Event) => {\n        this.getActivator(e)\n        this.runDelay('close')\n      }\n      listeners.keydown = (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.esc) {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      }\n\n      return listeners\n    },\n    genActivatorAttributes () {\n      return {\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genTransition () {\n      const content = this.genContent()\n\n      if (!this.computedTransition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.computedTransition,\n        },\n      }, [content])\n    },\n    genContent () {\n      return this.$createElement(\n        'div',\n        this.setBackgroundColor(this.color, {\n          staticClass: 'v-tooltip__content',\n          class: {\n            [this.contentClass]: true,\n            menuable__content__active: this.isActive,\n            'v-tooltip__content--fixed': this.activatorFixed,\n          },\n          style: this.styles,\n          attrs: this.getScopeIdAttrs(),\n          directives: [{\n            name: 'show',\n            value: this.isContentActive,\n          }],\n          ref: 'content',\n        }),\n        this.getContentSlot()\n      )\n    },\n  },\n\n  render (h): VNode {\n    return h(this.tag, {\n      staticClass: 'v-tooltip',\n      class: this.classes,\n    }, [\n      this.showLazyContent(() => [this.genTransition()]),\n      this.genActivator(),\n    ])\n  },\n})\n","// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsey, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const height = this.computedOriginalHeight\n\n      const min = this.dense ? 48 : 56\n      const max = height\n      const difference = max - min\n      const iteration = difference / this.computedScrollThreshold\n      const offset = this.currentScroll * iteration\n\n      return Math.max(min, max - offset)\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const max = this.dense ? 96 : 128\n      const difference = max - this.computedContentHeight\n      const increment = 0.00347\n\n      // 1.5rem to a minimum of 1.25rem\n      return Number((1.50 - difference * increment).toFixed(2))\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      const opacity = Math.max(\n        (this.computedScrollThreshold - this.currentScroll) / this.computedScrollThreshold,\n        0\n      )\n\n      return Number(parseFloat(opacity).toFixed(2))\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll !== 0\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp ||\n          this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n"],"sourceRoot":""}